name: Encryption service deploy

on:
  push:
    branches:
      - master 

defaults:
  run:
    shell: bash
    working-directory: kubernetes 

jobs:
  esd-push-docker-images:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cyber-crypt-com/github-runner:1.7
      credentials:
        username: USERNAME
        password: ${{ secrets.GHCR_PULL_TOKEN }}
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
    
    - name: Build new image
      run: |
        echo ${{ secrets.DEPLOY_CONFIG }} > scripts/deploy_env
        make docker-build
        make gcp-login
        make docker-push

    - name: Notify slack fail
      if: failure()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BUILD_ALERT_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        channel: product-alerts
        status: FAILURE
        color: warning

  esd-deploy-to-staging:
    needs: [esd-push-docker-images]
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cyber-crypt-com/github-runner:1.7
      credentials:
        username: USERNAME
        password: ${{ secrets.GHCR_PULL_TOKEN }}
    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Apply kubernetes files
      run: |
        echo ${{ secrets.DEPLOY_CONFIG }} > scripts/deploy_env
        make gcp-login
        make k8s-deploy
        
    - name: Notify slack fail
      if: failure()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BUILD_ALERT_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        channel: product-alerts
        status: FAILURE
        color: warning

  esd-e2e-test:
    needs: esd-deploy-to-staging
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cyber-crypt-com/github-runner:1.7
      credentials:
        username: USERNAME
        password: ${{ secrets.GHCR_PULL_TOKEN }}
    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Run end-to-end tests
      shell: 'script -e -c "bash {0}"' # Forces a TTY so we can do "kubectl exec.."
      run: |
        echo ${{ secrets.DEPLOY_CONFIG }} > scripts/deploy_env
        make gcp-login
        make cluster-test 

    - name: Notify slack fail
      if: failure()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BUILD_ALERT_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        channel: product-alerts
        status: FAILURE
        color: warning
