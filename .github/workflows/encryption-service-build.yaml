name: Encryption service build

on: push

defaults:
  run:
    shell: bash
    working-directory: encryption-service

jobs:
  esb-build:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/cyber-crypt-com/github-runner:1.3
      credentials:
        username: USERNAME
        password: ${{ secrets.GHCR_PULL_TOKEN }}

    steps:
    - name: notify-premium
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.CYBOT_TOKEN }}
        repository: cyber-crypt-com/encryptonize-premium
        event-type: repository_dispatch
        client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'

  #   - name: Check out repository
  #     uses: actions/checkout@v2

  #   - name: Lint
  #     run: make lint

  #   - name: Build
  #     run: make build

  # esb-eccs-build:
  #   runs-on: ubuntu-latest
  #   container:
  #     image: ghcr.io/cyber-crypt-com/github-runner:1.3
  #     credentials:
  #       username: USERNAME
  #       password: ${{ secrets.GHCR_PULL_TOKEN }}
  #   defaults:
  #     run:
  #       working-directory: applications/ECCS

  #   steps:
  #   - name: Check out repository
  #     uses: actions/checkout@v2

  #   - name: Lint
  #     run: make lint

  #   - name: Build
  #     run: make build

  # esb-unit-test:
  #   needs: esb-build
  #   runs-on: ubuntu-latest
  #   container:
  #     image: ghcr.io/cyber-crypt-com/github-runner:1.3
  #     credentials:
  #       username: USERNAME
  #       password: ${{ secrets.GHCR_PULL_TOKEN }}

  #   steps:
  #   - name: Check out repository
  #     uses: actions/checkout@v2

  #   - name: Test
  #     run: make unit-tests

  # esb-end-to-end-and-eccs:
  #   needs: [esb-build, esb-eccs-build]
  #   runs-on: ubuntu-latest
  #   container:
  #     image: ghcr.io/cyber-crypt-com/github-runner:1.3
  #     credentials:
  #       username: USERNAME
  #       password: ${{ secrets.GHCR_PULL_TOKEN }}

  #   steps:
  #   - name: Check out repository
  #     uses: actions/checkout@v2

  #   - name: Start docker containers
  #     run: make docker-up

  #   - name: Run eccs tests
  #     # Small hack to get docker-compose next to docker to work. We cannot attach to the host
  #     # network due to the way the workflow container is started, so we fetch the ip of the docker0
  #     # interface instead. See https://stackoverflow.com/a/31328031 for more information.
  #     run: |
  #       export ECCS_ENDPOINT=$(ip route show | awk '/default/ {print $3}'):9000
  #       make eccs-tests

  #   - name: Run end-to-end tests
  #     run: |
  #       export E2E_TEST_URL=$(ip route show | awk '/default/ {print $3}'):9000
  #       make e2e-tests

  #   - name: Log on failure
  #     if: ${{ failure() }}
  #     run: docker-compose logs

  #   - name: Stop docker containers
  #     run: make docker-down
