# Copyright 2020 CYBERCRYPT
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: selfsigned-issuer
  namespace: encryptonize
spec:
  selfSigned: {}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: ingress-certificate
  namespace: encryptonize
spec:
  secretName: ingress-certificate
  duration: 2160h # 90d
  renewBefore: 360h # 15d
  isCA: false
  privateKey:
    algorithm: ECDSA
    encoding: PKCS1
    size: 521
  usages:
  - server auth
  - client auth
  dnsNames:
  # Set the hostname for the Encryption Service below
  - ${ENCRYPTION_SERVICE_HOSTNAME}
  issuerRef:
    name: selfsigned-issuer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ingress-config
  namespace: encryptonize
data:
  nginx.conf : |
    events {}

    http {
      server {
        # modern ssl configuration according to https://wiki.mozilla.org/Security/Server_Side_TLS
        ssl_certificate /etc/ssl/certs/tls.crt;
        ssl_certificate_key /etc/ssl/private/tls.key;
        ssl_protocols TLSv1.3;
        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:10m;  # about 40000 sessions
        ssl_prefer_server_ciphers off;

        listen     9000 ssl http2;
        listen     [::]:9000 ssl http2;

        location /health {
          return 200 "ingress healthy\n";
        }

        location / {
          grpc_pass grpc://encryptonize-service.encryptonize.svc.cluster.local:9000;
        }
        client_max_body_size 100M;
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: encryptonize-ingress
  namespace: encryptonize
spec:
  replicas: 1
  selector:
    matchLabels:
      app: encryptonize-ingress
  template:
    metadata:
      labels:
        app: encryptonize-ingress
    spec:
      serviceAccountName: encryptonize-sa
      containers:
        - name: nginx
          image: nginx
          ports:
            - containerPort: 9000
          volumeMounts:
            - name: ingress-config
              mountPath: /etc/nginx/
              readOnly: true
            - name: ingress-certificate
              mountPath: /etc/ssl/certs/tls.crt
              subPath: tls.crt
              readOnly: true
            - name: ingress-certificate
              mountPath: /etc/ssl/private/tls.key
              subPath: tls.key
              readOnly: true
          readinessProbe:
            httpGet:
              path: /health
              port: 9000
              scheme: HTTPS
          livenessProbe:
            httpGet:
              path: /health
              port: 9000
              scheme: HTTPS
      volumes:
        - name: ingress-config
          configMap:
            name: ingress-config
        - name: ingress-certificate
          secret:
            secretName: ingress-certificate
---
apiVersion: v1
kind: Service
metadata:
  name: encryptonize-ingress
  namespace: encryptonize
spec:
  type: LoadBalancer
  selector:
    app: encryptonize-ingress
  ports:
    - name: grpc
      protocol: TCP
      port: 9000
      targetPort: 9000
